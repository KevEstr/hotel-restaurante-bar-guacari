{"ast":null,"code":"import axios from \"axios\";\nimport { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_CREATE_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_UPDATE_REQUEST, CATEGORY_UPDATE_SUCCESS, CATEGORY_UPDATE_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_DELETE_SUCCESS, CATEGORY_DELETE_FAIL } from \"../constants/categoryConstants\";\n\n//get all categories with pagination\nexport const listCategories = (keyword = \"\", pageNumber = \"\") => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //get all categories\n    const {\n      data\n    } = await axios.get(`/api/categories?keyword=${keyword}&pageNumber=${pageNumber}`, config);\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//create a category\nexport const createCategory = category => async (dispatch, getState) => {\n  const {\n    name\n  } = category;\n  try {\n    dispatch({\n      type: CATEGORY_CREATE_REQUEST\n    });\n\n    //get category from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //create category\n    const {\n      data\n    } = await axios.post(\"/api/categories\", {\n      name\n    }, config);\n    dispatch({\n      type: CATEGORY_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//get category details\nexport const listCategoryDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_DETAILS_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //api call to get category\n    const {\n      data\n    } = await axios.get(`/api/categories/${id}`, config);\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//update a category\nexport const updateCategory = category => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_UPDATE_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    //headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //update category\n    const {\n      data\n    } = await axios.put(`/api/categories/${category.id}`, category, config);\n    dispatch({\n      type: CATEGORY_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//delete category\nexport const deleteCategory = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_DELETE_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //api call to delete category\n    await axios.delete(`/api/categories/${id}`, config);\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_DETAILS_REQUEST","CATEGORY_DETAILS_SUCCESS","CATEGORY_DETAILS_FAIL","CATEGORY_UPDATE_REQUEST","CATEGORY_UPDATE_SUCCESS","CATEGORY_UPDATE_FAIL","CATEGORY_DELETE_REQUEST","CATEGORY_DELETE_SUCCESS","CATEGORY_DELETE_FAIL","listCategories","keyword","pageNumber","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","createCategory","category","name","post","listCategoryDetails","id","updateCategory","put","deleteCategory","delete"],"sources":["C:/Users/ASUS/Desktop/restobar-master/restobar-master/frontend/src/actions/categoryActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_UPDATE_REQUEST,\n    CATEGORY_UPDATE_SUCCESS,\n    CATEGORY_UPDATE_FAIL,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n} from \"../constants/categoryConstants\";\n\n//get all categories with pagination\nexport const listCategories =\n    (keyword = \"\", pageNumber = \"\") =>\n    async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: CATEGORY_LIST_REQUEST,\n            });\n\n            //get user from state\n            const {\n                userLogin: { userInfo },\n            } = getState();\n\n            //headers\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            };\n\n            //get all categories\n            const { data } = await axios.get(\n                `/api/categories?keyword=${keyword}&pageNumber=${pageNumber}`,\n                config\n            );\n\n            dispatch({\n                type: CATEGORY_LIST_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: CATEGORY_LIST_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            });\n        }\n    };\n\n//create a category\nexport const createCategory = (category) => async (dispatch, getState) => {\n    const { name } = category;\n\n    try {\n        dispatch({\n            type: CATEGORY_CREATE_REQUEST,\n        });\n\n        //get category from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create category\n        const { data } = await axios.post(\"/api/categories\", { name }, config);\n        dispatch({\n            type: CATEGORY_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get category details\nexport const listCategoryDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CATEGORY_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get category\n        const { data } = await axios.get(`/api/categories/${id}`, config);\n        dispatch({\n            type: CATEGORY_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a category\nexport const updateCategory = (category) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update category\n        const { data } = await axios.put(\n            `/api/categories/${category.id}`,\n            category,\n            config\n        );\n        dispatch({\n            type: CATEGORY_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete category\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete category\n        await axios.delete(`/api/categories/${id}`, config);\n        dispatch({\n            type: CATEGORY_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBC,uBAAuB,EACvBC,uBAAuB,EACvBC,oBAAoB,EACpBC,wBAAwB,EACxBC,wBAAwB,EACxBC,qBAAqB,EACrBC,uBAAuB,EACvBC,uBAAuB,EACvBC,oBAAoB,EACpBC,uBAAuB,EACvBC,uBAAuB,EACvBC,oBAAoB,QACjB,gCAAgC;;AAEvC;AACA,OAAO,MAAMC,cAAc,GACvBA,CAACC,OAAO,GAAG,EAAE,EAAEC,UAAU,GAAG,EAAE,KAC9B,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC1B,IAAI;IACAD,QAAQ,CAAC;MACLE,IAAI,EAAEpB;IACV,CAAC,CAAC;;IAEF;IACA,MAAM;MACFqB,SAAS,EAAE;QAAEC;MAAS;IAC1B,CAAC,GAAGH,QAAQ,CAAC,CAAC;;IAEd;IACA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC5C;IACJ,CAAC;;IAED;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAC3B,2BAA0BZ,OAAQ,eAAcC,UAAW,EAAC,EAC7DM,MACJ,CAAC;IAEDL,QAAQ,CAAC;MACLE,IAAI,EAAEnB,qBAAqB;MAC3B4B,OAAO,EAAEF;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZZ,QAAQ,CAAC;MACLE,IAAI,EAAElB,kBAAkB;MACxB2B,OAAO,EACHC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACvCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACpB,CAAC,CAAC;EACN;AACJ,CAAC;;AAEL;AACA,OAAO,MAAMC,cAAc,GAAIC,QAAQ,IAAK,OAAOhB,QAAQ,EAAEC,QAAQ,KAAK;EACtE,MAAM;IAAEgB;EAAK,CAAC,GAAGD,QAAQ;EAEzB,IAAI;IACAhB,QAAQ,CAAC;MACLE,IAAI,EAAEjB;IACV,CAAC,CAAC;;IAEF;IACA,MAAM;MACFkB,SAAS,EAAE;QAAEC;MAAS;IAC1B,CAAC,GAAGH,QAAQ,CAAC,CAAC;;IAEd;IACA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC5C;IACJ,CAAC;;IAED;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAM5B,KAAK,CAACqC,IAAI,CAAC,iBAAiB,EAAE;MAAED;IAAK,CAAC,EAAEZ,MAAM,CAAC;IACtEL,QAAQ,CAAC;MACLE,IAAI,EAAEhB,uBAAuB;MAC7ByB,OAAO,EAAEF;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZZ,QAAQ,CAAC;MACLE,IAAI,EAAEf,oBAAoB;MAC1BwB,OAAO,EACHC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACvCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACpB,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,mBAAmB,GAAIC,EAAE,IAAK,OAAOpB,QAAQ,EAAEC,QAAQ,KAAK;EACrE,IAAI;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAEd;IAAyB,CAAC,CAAC;;IAE5C;IACA,MAAM;MACFe,SAAS,EAAE;QAAEC;MAAS;IAC1B,CAAC,GAAGH,QAAQ,CAAC,CAAC;;IAEd;IACA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC5C;IACJ,CAAC;;IAED;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,mBAAkBU,EAAG,EAAC,EAAEf,MAAM,CAAC;IACjEL,QAAQ,CAAC;MACLE,IAAI,EAAEb,wBAAwB;MAC9BsB,OAAO,EAAEF;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZZ,QAAQ,CAAC;MACLE,IAAI,EAAEZ,qBAAqB;MAC3BqB,OAAO,EACHC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACvCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACpB,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMO,cAAc,GAAIL,QAAQ,IAAK,OAAOhB,QAAQ,EAAEC,QAAQ,KAAK;EACtE,IAAI;IACAD,QAAQ,CAAC;MACLE,IAAI,EAAEX;IACV,CAAC,CAAC;;IAEF;IACA,MAAM;MACFY,SAAS,EAAE;QAAEC;MAAS;IAC1B,CAAC,GAAGH,QAAQ,CAAC,CAAC;IACd;IACA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC5C;IACJ,CAAC;;IAED;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAM5B,KAAK,CAACyC,GAAG,CAC3B,mBAAkBN,QAAQ,CAACI,EAAG,EAAC,EAChCJ,QAAQ,EACRX,MACJ,CAAC;IACDL,QAAQ,CAAC;MACLE,IAAI,EAAEV,uBAAuB;MAC7BmB,OAAO,EAAEF;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZZ,QAAQ,CAAC;MACLE,IAAI,EAAET,oBAAoB;MAC1BkB,OAAO,EACHC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACvCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACpB,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,cAAc,GAAIH,EAAE,IAAK,OAAOpB,QAAQ,EAAEC,QAAQ,KAAK;EAChE,IAAI;IACAD,QAAQ,CAAC;MACLE,IAAI,EAAER;IACV,CAAC,CAAC;;IAEF;IACA,MAAM;MACFS,SAAS,EAAE;QAAEC;MAAS;IAC1B,CAAC,GAAGH,QAAQ,CAAC,CAAC;IACd;IACA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC5C;IACJ,CAAC;;IAED;IACA,MAAM3B,KAAK,CAAC2C,MAAM,CAAE,mBAAkBJ,EAAG,EAAC,EAAEf,MAAM,CAAC;IACnDL,QAAQ,CAAC;MACLE,IAAI,EAAEP;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACZZ,QAAQ,CAAC;MACLE,IAAI,EAAEN,oBAAoB;MAC1Be,OAAO,EACHC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACvCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACpB,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}